# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-22 07:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('djcelery', '0001_initial'),
        ('xm2cloud_cmp', '0005_auto_20180103_2022'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alerts_enabled', models.BooleanField(default=True)),
                ('last_alerting', models.DateTimeField(blank=True, null=True)),
                ('email_alerted', models.BooleanField(default=True)),
                ('wexin_alerted', models.BooleanField(default=False)),
                ('cur_allstatus', models.TextField(default='PASSING')),
                ('pre_allstatus', models.TextField(default='PASSING')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CheckService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alerts_enabled', models.BooleanField(default=True)),
                ('last_alerting', models.DateTimeField(blank=True, null=True)),
                ('email_alerted', models.BooleanField(default=True)),
                ('wexin_alerted', models.BooleanField(default=False)),
                ('cur_allstatus', models.TextField(default='PASSING')),
                ('pre_allstatus', models.TextField(default='PASSING')),
                ('instances', models.ManyToManyField(blank=True, to='xm2cloud_cmp.CheckInstance')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotifyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='StatusCheck',
            fields=[
                ('periodictask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djcelery.PeriodicTask')),
                ('importance', models.CharField(choices=[('CRITICAL', '\u4e25\u91cd'), ('PASSING', '\u6b63\u5e38'), ('WARNING', '\u8b66\u544a'), ('ERROR', '\u9519\u8bef')], default='ERROR', max_length=32)),
                ('frequency', models.IntegerField(default=3)),
                ('successive', models.IntegerField(default=0, null=True)),
                ('calculated_status', models.CharField(choices=[('PASSING', '\u6b63\u5e38\u8fd0\u884c'), ('FAILING', '\u6301\u7eed\u5f02\u5e38'), ('INTERMITTENT', '\u95f4\u6b47\u5f02\u5e38')], default='PASSING', max_length=64)),
                ('last_running', models.DateTimeField(blank=True, null=True)),
                ('cached_health', models.TextField(editable=False, null=True)),
                ('metric', models.TextField(null=True)),
                ('check_condition', models.CharField(choices=[('<', '\u5c0f\u4e8e'), ('==', '\u7b49\u4e8e'), ('<=', '\u5c0f\u4e8e\u7b49\u4e8e'), ('>=', '\u5927\u4e8e\u7b49\u4e8e'), ('>', '\u5927\u4e8e')], max_length=64, null=True)),
                ('check_value', models.TextField(null=True)),
                ('min_series_nums', models.IntegerField(default=0, null=True)),
                ('max_failed_nums', models.IntegerField(default=0, null=True)),
                ('endpoint', models.TextField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('regexp_text', models.TextField(blank=True, null=True)),
                ('status_code', models.TextField(default=200, null=True)),
                ('req_timeout', models.IntegerField(default=30, null=True)),
                ('ssl_enabled', models.BooleanField(default=True)),
                ('instances', models.ManyToManyField(blank=True, to='xm2cloud_cmp.CheckInstance')),
                ('services', models.ManyToManyField(blank=True, to='xm2cloud_cmp.CheckService')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('djcelery.periodictask',),
        ),
        migrations.CreateModel(
            name='StatusCheckResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sta_time', models.DateTimeField(db_index=True, null=True)),
                ('end_time', models.DateTimeField(db_index=True, null=True)),
                ('raw_data', models.TextField(null=True)),
                ('is_succs', models.BooleanField(default=False)),
                ('err_info', models.TextField(null=True)),
                ('status_check', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xm2cloud_cmp.StatusCheck')),
            ],
            options={
                'ordering': ['-end_time'],
            },
        ),
        migrations.AddField(
            model_name='checkservice',
            name='notify_users',
            field=models.ManyToManyField(blank=True, to='xm2cloud_cmp.NotifyUser'),
        ),
        migrations.AddField(
            model_name='checkservice',
            name='status_checks',
            field=models.ManyToManyField(blank=True, to='xm2cloud_cmp.StatusCheck'),
        ),
        migrations.AddField(
            model_name='checkinstance',
            name='notify_users',
            field=models.ManyToManyField(blank=True, to='xm2cloud_cmp.NotifyUser'),
        ),
        migrations.AddField(
            model_name='checkinstance',
            name='status_checks',
            field=models.ManyToManyField(blank=True, to='xm2cloud_cmp.StatusCheck'),
        ),
        migrations.CreateModel(
            name='GraphiteStatusCheck',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('xm2cloud_cmp.statuscheck',),
        ),
        migrations.CreateModel(
            name='HttpStatusCheck',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('xm2cloud_cmp.statuscheck',),
        ),
        migrations.CreateModel(
            name='PortStatusCheck',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('xm2cloud_cmp.statuscheck',),
        ),
        migrations.AlterIndexTogether(
            name='statuscheckresult',
            index_together=set([('status_check', 'id'), ('status_check', 'end_time')]),
        ),
    ]
